{"ast":null,"code":"var _jsxFileName = \"/home/stephen/localshop/client/src/components/analytics/InventoryAnalytics.jsx\";\nimport React from 'react';\nimport Linegraph from '../../pages/Linegraph';\nimport SideBar from \"../sidebar/SideBar\";\nimport NavBar from '../NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InventoryAnalytics() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytic-graph\",\n        children: /*#__PURE__*/_jsxDEV(Linegraph, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c = InventoryAnalytics;\nexport default InventoryAnalytics;\n\n// import React, {useState, useEffect } from 'react'\n// import axios from 'axios'\n// import { Chart as ChartJS, BarElement, CategoryScale, LinearScale } from 'chart.js'\n// import { Bar } from 'react-chartjs-2'\n// import Grid from '@mui/material/Grid'\n\n// ChartJS.register(\n//   BarElement,\n//   CategoryScale,\n//   LinearScale\n// )\n\n// const InventoryAnalytics = () => {\n//   const [chartData, setChartData]  = useState({});\n//   const fetchInventories = () => {\n//     let name = [];\n//     let price = [];\n\n//     axios.get(\"/inventories\")\n//       .then(response => {\n//         console.log(response);\n//         for (const resObj of response.data) {\n//           name.push(resObj.name);\n//           price.push(parseInt(resObj.price))\n//         }\n\n//         setChartData({\n//           labels:name,\n//           datasets: [{\n//             label: \"Inventory Analytics\",\n//             data: price,\n//             backgroundColor: [\n//               'rgba(255, 99, 132, 0.2)',\n//               'rgba(54, 162, 235, 0.2)',\n//               'rgba(255, 206, 86, 0.2)',\n//               'rgba(75, 192, 192, 0.2)',\n//               'rgba(153, 102, 255, 0.2)',\n//               'rgba(255, 159, 64, 0.2)',\n//             ],\n//             borderColor: [\n//               'rgba(255, 99, 132, 0.2)',\n//               'rgba(54, 162, 235, 0.2)',\n//               'rgba(255, 206, 86, 0.2)',\n//               'rgba(75, 192, 192, 0.2)',\n//               'rgba(153, 102, 255, 0.2)',\n//               'rgba(255, 159, 64, 0.2)',\n//             ],\n//             borderWidth: 1\n//           }]\n//         })\n//     })\n//   }\n\n//   useEffect(() => {\n//     fetchInventories()\n//   },[])\n\n//   const options = {\n//     maintainAspectRatio: false,\n//     scales: {\n//       y: {\n//         beginAtZero: true\n//       }\n//     },\n//     legend: {\n//       labels: {\n//         fontSize:26\n//       }\n//     }\n//   }\n//   return (\n//     <Grid item xs={8}>\n\n//         <Bar\n//         data={chartData}\n//         options={options}\n//         height={400}\n//       />\n\n//     </Grid>\n//   )\n// }\n\n// export default InventoryAnalytics\nvar _c;\n$RefreshReg$(_c, \"InventoryAnalytics\");","map":{"version":3,"names":["React","Linegraph","SideBar","NavBar","InventoryAnalytics"],"sources":["/home/stephen/localshop/client/src/components/analytics/InventoryAnalytics.jsx"],"sourcesContent":["import React from 'react'\nimport Linegraph from '../../pages/Linegraph'\nimport SideBar from \"../sidebar/SideBar\";\nimport NavBar from '../NavBar';\n\nfunction InventoryAnalytics() {\n  return (\n    <>\n    <NavBar/>\n    <SideBar/>\n    <div className=\"analytics-wrap\">\n      <div className=\"analytic-graph\"><Linegraph/></div>\n    </div>\n    \n    \n    </>\n  )\n}\n\nexport default InventoryAnalytics\n\n\n\n\n\n\n\n\n\n\n// import React, {useState, useEffect } from 'react'\n// import axios from 'axios'\n// import { Chart as ChartJS, BarElement, CategoryScale, LinearScale } from 'chart.js'\n// import { Bar } from 'react-chartjs-2'\n// import Grid from '@mui/material/Grid'\n\n\n// ChartJS.register(\n//   BarElement,\n//   CategoryScale,\n//   LinearScale\n// )\n\n\n// const InventoryAnalytics = () => {\n//   const [chartData, setChartData]  = useState({});\n//   const fetchInventories = () => {\n//     let name = [];\n//     let price = [];\n\n//     axios.get(\"/inventories\")\n//       .then(response => {\n//         console.log(response);\n//         for (const resObj of response.data) {\n//           name.push(resObj.name);\n//           price.push(parseInt(resObj.price))\n//         }\n\n//         setChartData({\n//           labels:name,\n//           datasets: [{\n//             label: \"Inventory Analytics\",\n//             data: price,\n//             backgroundColor: [\n//               'rgba(255, 99, 132, 0.2)',\n//               'rgba(54, 162, 235, 0.2)',\n//               'rgba(255, 206, 86, 0.2)',\n//               'rgba(75, 192, 192, 0.2)',\n//               'rgba(153, 102, 255, 0.2)',\n//               'rgba(255, 159, 64, 0.2)',\n//             ],\n//             borderColor: [\n//               'rgba(255, 99, 132, 0.2)',\n//               'rgba(54, 162, 235, 0.2)',\n//               'rgba(255, 206, 86, 0.2)',\n//               'rgba(75, 192, 192, 0.2)',\n//               'rgba(153, 102, 255, 0.2)',\n//               'rgba(255, 159, 64, 0.2)',\n//             ],\n//             borderWidth: 1\n//           }]\n//         })\n//     })\n//   }\n\n//   useEffect(() => {\n//     fetchInventories()\n//   },[])\n  \n//   const options = {\n//     maintainAspectRatio: false,\n//     scales: {\n//       y: {\n//         beginAtZero: true\n//       }\n//     },\n//     legend: {\n//       labels: {\n//         fontSize:26\n//       }\n//     }\n//   }\n//   return (\n//     <Grid item xs={8}>\n     \n//         <Bar\n//         data={chartData}\n//         options={options}\n//         height={400}\n//       />\n\n//     </Grid>\n//   )\n// }\n\n// export default InventoryAnalytics"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,MAAM,MAAM,WAAW;AAAC;AAAA;AAE/B,SAASC,kBAAkB,GAAG;EAC5B,oBACE;IAAA,wBACA,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACV;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAC7B;QAAK,SAAS,EAAC,gBAAgB;QAAA,uBAAC,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QAC9C;EAAA,gBAGH;AAEP;AAAC,KAZQA,kBAAkB;AAc3B,eAAeA,kBAAkB;;AAWjC;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}